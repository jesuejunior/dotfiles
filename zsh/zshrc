# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="jj"

export HOMEBREW_NO_ANALYTICS=1
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(python git git-flow github django pip node postgres tmux docker docker-compose pep8 )

source $ZSH/oh-my-zsh.sh
eval $(/opt/homebrew/bin/brew shellenv)
eval "$(pipenv --completion)"

#GPG config
GPG_TTY=$(tty)
export GPG_TTY
if [ -z "${SSH_TTY}" ]; then
  export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
fi

# Customize to your needs...
#alias vim='/usr/local/Cellar/vim/7.4.052/bin/vim'
alias gf='git flow '
alias gcm='git commit -m'
alias gckm='git checkout master'
alias gckd='git checkout develop'
alias gpt='git push --tags'
alias gmm='git merge master'
alias gmd='git merge develop'
alias gba='git branch -a'
alias gt='git tag'
alias grbd='git rebase develop'
alias gdf='git diff '

alias gck='git checkout'
alias gc='git commit '
alias gs='git status'
alias glog='git log --oneline --decorate --all --graph '
alias gm='git merge'
alias gp='git push'
alias grb='git rebase'
alias ga='git add'
alias gpl='git pull'
alias gsth='git stash'
alias glg="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias glc='git log ORIG_HEAD.. --stat --no-merges'
alias glol='git log --graph --decorate --pretty=oneline --abbrev-commit'
alias glola='git log --graph --decorate --pretty=oneline --abbrev-commit --all'
alias gll='git log --graph --date=short'
alias gmt='git mergetool'
alias py='ipython'
alias postgres.server="sudo -u postgres /Library/PostgreSQL/9.2/bin/pg_ctl -D/Library/PostgreSQL/9.2/data -m fast"
alias gpa='git remote update && git checkout master && git merge origin/master && git checkout develop && git merge origin/develop'
alias tmux="TERM=screen-256color-bce tmux"

alias yf="gpg-connect-agent updatestartuptty /bye"
#python
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'
[[ -f /usr/bin/virtualenvwrapper.sh ]] && source /usr/bin/virtualenvwrapper.sh
[[ -f /usr/local/bin/virtualenvwrapper.sh ]] && source /usr/local/bin/virtualenvwrapper.sh
eval "$(pyenv init -)"

#Path to Scala
#export LC_ALL="en_US.utf-8"
#export SCALA_HOME=/usr/local/scala
#export PATH=$PATH:$SCALA_HOME/bin

#Path to golang
#export GOPATH=~/gocode
#export PATH=$PATH:$GOPATH/bin

#Path to NVM
#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# Ruby
#PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
# export PATH="$HOME/.rbenv/bin:$PATH"
# eval "$(rbenv init -)"

# RUST
export PATH="$HOME/.cargo/bin:$PATH"
export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
#export SDKMAN_DIR="/Users/jesuejunior/.sdkman"
#[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"

python -mplatform | grep -i Ubuntu
if [ $? = 0 ]
then
	export PYENV_ROOT="$HOME/.pyenv"
	export PATH="$PYENV_ROOT/bin:$PATH"
	if command -v pyenv 1>/dev/null 2>&1; then
	eval "$(pyenv init -)"
	fi
fi
# export GOOGLE_CREDENTIALS=~/datalabs-jesuejunior.json
# export GOOGLE_APPLICATION_CREDENTIALS=~/datalabs-jesuejunior.json
# export GOOGLE_CLOUD_KEYFILE_JSON=~/datalabs-jesuejunior.json


#TODO: create a if it is mac or linux
#Postgres libpg configs
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/libpq/lib"
export CPPFLAGS="-I/opt/homebrew/opt/libpq/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/libpq/lib/pkgconfig"

# MYSQL client
#export PATH="/opt/homebrew/opt/mysql-client/bin:$PATH"

# Work
export VAULT_ADDR=https://
export VAULT_CACERT=~/.pem
export VAULT_TOKEN=

export NEXUS_USERNAME=jj
export NEXUS_PASSWORD=
export GITHUB_USER=jesuejunior
export GITHUB_USER_TOKEN=
export SLACK_TOKEN=

#export PATH="/opt/homebrew/opt/scala@2.12/bin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jesuejunior/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/jesuejunior/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jesuejunior/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/jesuejunior/google-cloud-sdk/completion.zsh.inc'; fi

export PATH="/opt/homebrew/opt/openssl@1.1/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/openssl@1.1/lib"
export CPPFLAGS="-I/opt/homebrew/opt/openssl@1.1/include"

export PATH="/opt/homebrew/opt/postgresql@13/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/postgresql@13/lib"
export CPPFLAGS="-I/opt/homebrew/opt/postgresql@13/include"

export PATH="$PATH:$HOME/.local/bin"
